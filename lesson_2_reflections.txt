What happens when you initialize a repository? Why do you need to do it?
	By initializing, we are creating a git repository. Git repository is different from just folder concept. It contains details of history of files, their commits.



How is the staging area different from the working directory and the repository?
What value do you think it offers?

	Staging area is place where add the files that is to be commited. In working directory we contain files that are commited. Staging area acts like intermediate place, where we are able to mark the files to be added in another stage.

How can you use the staging area to make sure you have one commit per logical
change?
We can add files to be commited.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	Its usefull to create branches when I need multiple ways of using a single project. I may need different levels of difficulty, different languages etc.


How do the diagrams help you visualize the branch structure?
	Ya it made easier to visualize. Creating a branch, its like creating a copy to be worked independtly. We will have working master branch.


What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
	Merging two branches results in a combined file. Its easier to understand and visualize with diagrams.


What are the pros and cons of Git's automatic merging vs. always doing merges
manually?

Merging automatically is usefull as it doesnt need any manual interventions. But sometimes we need to manually resolve conflicts while merging because git doesnot know what we are logically implementing.